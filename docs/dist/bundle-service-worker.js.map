{"version":3,"sources":["webpack:///bundle-service-worker.js","webpack:///./service-worker.js"],"names":["webpackJsonp","225","module","exports","global","importScripts","toolbox","options","debug","router","default","networkFirst","addEventListener","skipWaiting","clients","claim","self","488","__webpack_require__"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAASC,EAAQC,ICHvB,SAACC,GACC,YAGAC,eAAc,iBAGdD,EAAOE,QAAQC,QAAQC,OAAQ,EAe/BJ,EAAOE,QAAQG,OAAOC,QAAUN,EAAOE,QAAQK,aAI/CP,EAAOQ,iBAAiB,UAAW,iBAAMR,GAAOS,gBAChDT,EAAOQ,iBAAiB,WAAY,iBAAMR,GAAOU,QAAQC,WACxDC,ODcGC,IACA,SAASf,EAAQC,EAASe,GAEhChB,EAAOC,QAAUe,EAAoB,QAKlC","file":"bundle-service-worker.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 225:\n/***/ function(module, exports) {\n\n(function (global) {\n  'use strict';\n\n  // Load the sw-toolbox library.\n\n  importScripts('sw-toolbox.js');\n\n  // Turn on debug logging, visible in the Developer Tools' console.\n  global.toolbox.options.debug = true;\n\n  // Set up a handler for HTTP GET requests for /data/ URLs:\n  // global.toolbox.router.get(/index-offling\\.html/, global.toolbox.fastest, {\n  //   // Use a dedicated cache for the responses, separate from the default cache.\n  //   // Enable notifyOnCacheUpdate to get message events if the response changes.\n  //   cache: {\n  //     name: 'data-cache',\n  //     notifyOnCacheUpdate: true\n  //   }\n  // });\n\n  // By default, all requests that don't match our custom handler will use the\n  // toolbox.networkFirst cache strategy, and their responses will be stored in\n  // the default cache.\n  global.toolbox.router.default = global.toolbox.networkFirst;\n\n  // Boilerplate to ensure our service worker takes control of the page as soon\n  // as possible.\n  global.addEventListener('install', function () {\n    return global.skipWaiting();\n  });\n  global.addEventListener('activate', function () {\n    return global.clients.claim();\n  });\n})(self);\n\n/***/ },\n\n/***/ 488:\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(225);\n\n\n/***/ }\n\n},[488]);\n\n\n// WEBPACK FOOTER //\n// bundle-service-worker.js","(global => {\n  'use strict';\n\n  // Load the sw-toolbox library.\n  importScripts('sw-toolbox.js');\n\n  // Turn on debug logging, visible in the Developer Tools' console.\n  global.toolbox.options.debug = true;\n\n  // Set up a handler for HTTP GET requests for /data/ URLs:\n  // global.toolbox.router.get(/index-offling\\.html/, global.toolbox.fastest, {\n  //   // Use a dedicated cache for the responses, separate from the default cache.\n  //   // Enable notifyOnCacheUpdate to get message events if the response changes.\n  //   cache: {\n  //     name: 'data-cache',\n  //     notifyOnCacheUpdate: true\n  //   }\n  // });\n\n  // By default, all requests that don't match our custom handler will use the\n  // toolbox.networkFirst cache strategy, and their responses will be stored in\n  // the default cache.\n  global.toolbox.router.default = global.toolbox.networkFirst;\n\n  // Boilerplate to ensure our service worker takes control of the page as soon\n  // as possible.\n  global.addEventListener('install', () => global.skipWaiting());\n  global.addEventListener('activate', () => global.clients.claim());\n})(self);\n\n\n\n// WEBPACK FOOTER //\n// ./service-worker.js"],"sourceRoot":""}